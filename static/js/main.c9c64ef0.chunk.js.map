{"version":3,"sources":["components/FormSaving.js","components/Panels.js","components/Counters.js","components/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["FormSaving","state","aim","price","messanges","aim_incorrect","price_incorrect","handleInput","e","console","log","_this","props","aimError","priceError","value","target","type","name","setState","Object","defineProperty","_this2","this","_this$state","react_default","a","createElement","className","onChange","required","style","min","onClick","preventDefault","saveInformation","Component","Panels","_ref","length","Counters","payment","handlePayment","payment_incorrect","moneySaved","moneyToSavingYet","paymentErr","handleCount","Footer","App","errors","handleSaveInformation","reg","RegExp","validAim","search","Number","handleCounter","prev","parseInt","color","fontSize","display","margin","padding","components_FormSaving","components_Panels","components_Counters","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c9c64ef0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass FormSaving extends Component {\r\n  state = { \r\n    aim : \"\",\r\n    price: 0,\r\n   }\r\n\r\n   messanges = {\r\n    aim_incorrect: \"Check that the destination name has a minimum of 3 characters and contains letters\",\r\n    price_incorrect : \"Check if the amount is at least 1$ \",\r\n   }\r\n\r\n   handleInput = (e) =>{\r\n     console.log(this.props.aimError, this.props.priceError);\r\n    const value = e.target.value;  \r\n    const type = e.target.type;\r\n    const name = e.target.name;\r\n\r\n    if(type === \"text\" || type === \"number\"){\r\n        this.setState({\r\n          [name]: value,\r\n        })\r\n    }\r\n\r\n   }\r\n\r\n  render() { \r\n    const {aim, price} = this.state;\r\n    \r\n    return ( \r\n      <div className=\"headerForm\">\r\n        <h1 className=\"headerForm__slogan\">Welcome in savings application!</h1>\r\n        <form className=\"form\">\r\n          <label className=\"form__label\"> Please, write what's your aim:\r\n          <input className=\"form__label__aim\" type=\"text\" value={this.state.aim} onChange={this.handleInput} name=\"aim\" required/> \r\n          {this.props.aimError && <span style={this.props.style}>{this.messanges.aim_incorrect} </span>} \r\n          </label>\r\n           <br />\r\n          <label className=\"form__label\">and how much it costs: \r\n           <input className=\"form__label__price\" type=\"text\" value={this.state.price} onChange={this.handleInput} name=\"price\" min=\"1\" required/> $ \r\n           {this.props.priceError && <span style={this.props.style}>{this.messanges.price_incorrect} </span>} </label> \r\n           <br />\r\n           <button className=\"form__button\" type=\"submit\" onClick={(e)=> {\r\n             e.preventDefault();\r\n             this.props.saveInformation(aim, price)\r\n           }}>Let's go!</button>\r\n        </form>\r\n      </div>\r\n     );\r\n  }\r\n}\r\n \r\nexport default FormSaving;","import React from 'react';\r\n\r\n\r\n\r\nconst Panels = ({aim, price}) => {\r\n  return ( \r\n    <div className=\"panelsInfo\">\r\n      {aim.length > 0 ? <div className=\"panelsInfo__panel\">\r\n        <span > You want: {aim}</span> \r\n        <span> It costs: {price} $</span>\r\n      </div> : \"\"}\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default Panels;","import React, { Component } from 'react';\r\n\r\n\r\nclass Counters extends Component{\r\n \r\n  state={\r\n    payment:0,\r\n    // price: 0,\r\n    // moneySaved: 0,\r\n    // moneyToSavingYet: 0,\r\n  }\r\n\r\n  handlePayment = (e) =>{\r\n    this.setState({\r\n      payment: e.target.value,\r\n    })\r\n  }\r\n\r\n   payment_incorrect = \"The deposit can't contain letters and amount can't be larger than remains to the end\";\r\n\r\n\r\n  render(){\r\n      const { payment } = this.state;\r\n    return ( \r\n      <div className=\"counters\">\r\n        <div className=\"panelsCounters\">\r\n        <div className=\"panelsCounters__panel\">\r\n         <h4> Saved money: </h4>\r\n          {this.props.moneySaved} $\r\n        </div>\r\n        <div className=\"panelsCounters__panel\">\r\n          <h4>It remains to the end: </h4>\r\n           {this.props.moneyToSavingYet}$\r\n        </div>\r\n        </div>\r\n        <div className=\"counters__form\">\r\n        <input className=\"counters__form__input\" type=\"text\" value={this.state.payment} onChange={this.handlePayment} min=\"1\" /> $\r\n        {this.props.paymentErr && <span style={this.props.style}>{this.payment_incorrect} </span>} \r\n\r\n        <button \r\n        className=\"counters__form__button\" \r\n        type=\"submit\"\r\n        onClick={(e)=> {\r\n          e.preventDefault();\r\n          this.props.handleCount(payment)} \r\n          }\r\n        >\r\n          Save\r\n        </button>\r\n        </div>\r\n      </div>\r\n    );\r\n    }\r\n  }\r\n \r\nexport default Counters;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return ( \r\n    <div className=\"footer\">\r\n      <h3>FOOTER, INFORMATION ABOUT CREATOR</h3>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default Footer;","import React, { Component } from 'react';\nimport FormSaving from './FormSaving';\nimport Panels from './Panels';\nimport Counters from './Counters';\nimport Footer from './Footer';\nimport './css/App.css'\n\nclass App extends Component {\n  state = { \n    aim: \"\",\n    price: 0,\n    payment: 0,\n    moneySaved: 0,\n    moneyToSavingYet: 0,\n  \n    errors: {\n      aim:  false,\n      price: false,\n      payment: false,\n    }\n   }\n\n  handleSaveInformation = (aim, price) =>{\n\n    this.setState({\n      aim: \"\",\n      price: 0,\n      payment: 0,\n      moneySaved: 0,\n      moneyToSavingYet: 0,\n\n    errors: {\n      aim:  false,\n      price: false,\n      payment: false,\n    }\n    })\n  \n    const reg = new RegExp('[A-Za-z]');\n    const validAim = aim.search(reg);\n    \n\n    if(aim.length > 2 && validAim > -1) {\n     this.setState({\n      aim,\n      price,\n    })\n\n    }    \n    else {\n      this.setState({\n        errors :{\n          aim: true,\n        }\n      })\n    }\n\n    if( Number(price) >= 1 ){\n    this.setState({\n          moneyToSavingYet: price,\n        })\n    } else {\n      this.setState({\n        errors :{\n          price: true,\n        }\n      })\n    }\n\n  }\n\n  handleCounter = (payment) =>{\n    this.setState({\n     errors: {\n      payment: false,\n      }\n    })\n    \n    if(Number(payment) >= 1 && Number(payment) <= this.state.moneyToSavingYet) {\n      this.setState({\n        payment,\n     })\n \n     }    \n     else {\n       return this.setState({\n         errors :{\n           payment: true,\n         }\n       })\n     }\n\n      this.setState((prev)=>({\n      moneySaved : parseInt(prev.payment) + prev.moneySaved,\n      moneyToSavingYet: prev.moneyToSavingYet - parseInt(prev.payment),\n    }))\n\n    \n  }\n \n  render() { \n    const style= {\n      color:'red',\n      fontSize: '15px',\n      display: 'block',\n      margin:0,\n      padding:0,\n    }\n       return ( \n      <div className=\"App\">\n          <FormSaving \n             saveInformation={this.handleSaveInformation} \n             aimError={this.state.errors.aim}\n             priceError={this.state.errors.price}\n             style={style}\n          />\n          <Panels \n            aim={this.state.aim} \n            price={this.state.price} \n          />\n          <Counters \n            handleCount={this.handleCounter} \n            moneySaved={this.state.moneySaved}\n            moneyToSavingYet={this.state.moneyToSavingYet}\n            paymentErr={this.state.errors.payment}\n            style={style}\n          />\n          <Footer />\n      </div>\n     );\n  }\n}\n \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}